// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeStop.Infra.Database;

namespace WeStop.Infra.Migrations
{
    [DbContext(typeof(WeStopSqlServerDbContext))]
    [Migration("20190507144521_entity_gameroom_players_map")]
    partial class entity_gameroom_players_map
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeStop.Domain.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AvailableLetters")
                        .IsRequired()
                        .HasColumnName("available_letters")
                        .HasMaxLength(52);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiraton_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(15);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnName("number_of_players");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnName("number_of_rounds");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Themes")
                        .IsRequired()
                        .HasColumnName("themes")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("gameroom");
                });

            modelBuilder.Entity("WeStop.Domain.GameRoomPlayer", b =>
                {
                    b.Property<Guid>("GameRoomId")
                        .HasColumnName("gameroom_id");

                    b.Property<Guid>("PlayerId")
                        .HasColumnName("player_id");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_admin")
                        .HasDefaultValue(false);

                    b.HasKey("GameRoomId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("gameroom_player");
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(35);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("player");
                });

            modelBuilder.Entity("WeStop.Domain.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("theme");

                    b.HasData(
                        new
                        {
                            Id = new Guid("486facd3-8698-4fa7-b434-ad694552bf85"),
                            Name = "Nome"
                        },
                        new
                        {
                            Id = new Guid("d1f7b77a-707d-451c-817a-d1134669df59"),
                            Name = "Sobrenome"
                        },
                        new
                        {
                            Id = new Guid("d9f9fb67-08d7-4f77-bb04-0a86a4a954df"),
                            Name = "CEP"
                        },
                        new
                        {
                            Id = new Guid("79469570-2978-468c-8b29-56651caf86e2"),
                            Name = "FDS"
                        },
                        new
                        {
                            Id = new Guid("74a30b8c-6ae4-4c9f-9142-1344f976e728"),
                            Name = "Carro"
                        },
                        new
                        {
                            Id = new Guid("f69cad87-25a0-4e77-8707-364afafe08c1"),
                            Name = "Marca"
                        },
                        new
                        {
                            Id = new Guid("1a498682-7297-4ab4-9e3e-70edd84928b0"),
                            Name = "Objeto"
                        },
                        new
                        {
                            Id = new Guid("b1a82dc5-58de-43da-b42e-409e36f88668"),
                            Name = "Cor"
                        },
                        new
                        {
                            Id = new Guid("0354a186-6ee9-46f6-8a0b-8437d6993ae6"),
                            Name = "Fruta"
                        });
                });

            modelBuilder.Entity("WeStop.Domain.GameRoomPlayer", b =>
                {
                    b.HasOne("WeStop.Domain.GameRoom", "GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WeStop.Domain.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
