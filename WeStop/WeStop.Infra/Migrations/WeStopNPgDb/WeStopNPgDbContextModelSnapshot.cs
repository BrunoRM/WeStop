// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeStop.Infra.Database;

namespace WeStop.Infra.Migrations.WeStopNPgDb
{
    [DbContext(typeof(WeStopNPgDbContext))]
    partial class WeStopNPgDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WeStop.Domain.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AvailableLetters")
                        .IsRequired()
                        .HasColumnName("available_letters")
                        .HasMaxLength(52);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiraton_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(15);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnName("number_of_players");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnName("number_of_rounds");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Themes")
                        .IsRequired()
                        .HasColumnName("themes")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("gameroom","public");
                });

            modelBuilder.Entity("WeStop.Domain.GameRoomPlayer", b =>
                {
                    b.Property<Guid>("GameRoomId")
                        .HasColumnName("gameroom_id");

                    b.Property<Guid>("PlayerId")
                        .HasColumnName("player_id");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_admin")
                        .HasDefaultValue(false);

                    b.HasKey("GameRoomId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("gameroom_player","public");
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(35);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("player","public");
                });

            modelBuilder.Entity("WeStop.Domain.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("theme","public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b40ae9e5-9e16-4441-8a01-494db1052f50"),
                            Name = "Nome"
                        },
                        new
                        {
                            Id = new Guid("6039ae57-0723-4b61-a028-37406f1187bc"),
                            Name = "Sobrenome"
                        },
                        new
                        {
                            Id = new Guid("309a5da6-78e3-4d53-863d-06b952c47bee"),
                            Name = "CEP"
                        },
                        new
                        {
                            Id = new Guid("3f54d595-160a-4e35-87e6-ba4b3ecf5683"),
                            Name = "FDS"
                        },
                        new
                        {
                            Id = new Guid("f2fc7214-2f54-4963-9ce9-5f9bc800b73b"),
                            Name = "Carro"
                        },
                        new
                        {
                            Id = new Guid("cd7ccfa6-082c-4473-8a92-ed2cfe2b0c3b"),
                            Name = "Marca"
                        },
                        new
                        {
                            Id = new Guid("cc3ac47c-f5d5-4063-9eff-dd475cad059b"),
                            Name = "Objeto"
                        },
                        new
                        {
                            Id = new Guid("92e873fa-1b76-413e-b969-c3c3d8e980fb"),
                            Name = "Cor"
                        },
                        new
                        {
                            Id = new Guid("35024700-7892-4dd8-aaca-bef08735ea1f"),
                            Name = "Fruta"
                        });
                });

            modelBuilder.Entity("WeStop.Domain.GameRoomPlayer", b =>
                {
                    b.HasOne("WeStop.Domain.GameRoom", "GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WeStop.Domain.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
