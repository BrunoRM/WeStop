// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeStop.Infra.Database;

namespace WeStop.Infra.Migrations
{
    [DbContext(typeof(WeStopSqlServerDbContext))]
    [Migration("20190506131557_gameroom_themes_and_available_letters")]
    partial class gameroom_themes_and_available_letters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeStop.Domain.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AvailableLetters")
                        .IsRequired()
                        .HasColumnName("available_letters")
                        .HasMaxLength(52);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiraton_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(15);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnName("number_of_players");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnName("number_of_rounds");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Themes")
                        .IsRequired()
                        .HasColumnName("themes")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("gameroom");
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<Guid?>("GameRoomId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(35);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("WeStop.Domain.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("theme");

                    b.HasData(
                        new
                        {
                            Id = new Guid("016dc905-1375-4f55-9083-628fb088c4c3"),
                            Name = "Nome"
                        },
                        new
                        {
                            Id = new Guid("285caca1-52ba-465e-b944-e898e7cf9804"),
                            Name = "Sobrenome"
                        },
                        new
                        {
                            Id = new Guid("46182272-21e1-48f2-86ce-96fb1e8ab305"),
                            Name = "CEP"
                        },
                        new
                        {
                            Id = new Guid("fef19edc-6146-4816-a643-50d331ec4e76"),
                            Name = "FDS"
                        },
                        new
                        {
                            Id = new Guid("7bbb49ca-6af3-4bff-b8de-6d00ebaadf7d"),
                            Name = "Carro"
                        },
                        new
                        {
                            Id = new Guid("689d8d45-dc15-4ce3-a389-9e30231b7667"),
                            Name = "Marca"
                        },
                        new
                        {
                            Id = new Guid("cecbd6df-c0a7-4d39-9174-9c854c7e806c"),
                            Name = "Objeto"
                        },
                        new
                        {
                            Id = new Guid("9c67ebb2-cda2-44ec-854e-f28812ab0d93"),
                            Name = "Cor"
                        },
                        new
                        {
                            Id = new Guid("bf2e7d6f-ff11-4f78-a3e3-cbf385a15ef1"),
                            Name = "Fruta"
                        });
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.HasOne("WeStop.Domain.GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
