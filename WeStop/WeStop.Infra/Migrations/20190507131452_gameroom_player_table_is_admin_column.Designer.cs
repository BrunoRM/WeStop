// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeStop.Infra.Database;

namespace WeStop.Infra.Migrations
{
    [DbContext(typeof(WeStopSqlServerDbContext))]
    [Migration("20190507131452_gameroom_player_table_is_admin_column")]
    partial class gameroom_player_table_is_admin_column
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeStop.Domain.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AvailableLetters")
                        .IsRequired()
                        .HasColumnName("available_letters")
                        .HasMaxLength(52);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiraton_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(15);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnName("number_of_players");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnName("number_of_rounds");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Themes")
                        .IsRequired()
                        .HasColumnName("themes")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("gameroom");
                });

            modelBuilder.Entity("WeStop.Domain.GameRoomPlayer", b =>
                {
                    b.Property<Guid>("GameRoomId")
                        .HasColumnName("gameroom_id");

                    b.Property<Guid>("PlayerId")
                        .HasColumnName("player_id");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_admin")
                        .HasDefaultValue(false);

                    b.HasKey("GameRoomId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("gameroom_player");
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(35);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("player");
                });

            modelBuilder.Entity("WeStop.Domain.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("theme");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4736950f-1e07-45e1-ab56-1f9cf93b7d77"),
                            Name = "Nome"
                        },
                        new
                        {
                            Id = new Guid("ddad0d5f-8e18-42bc-bb6d-dd0729f7d675"),
                            Name = "Sobrenome"
                        },
                        new
                        {
                            Id = new Guid("498f47af-fe9e-42d9-9c29-6a7025f377e7"),
                            Name = "CEP"
                        },
                        new
                        {
                            Id = new Guid("cd81e591-3c65-490a-ad8a-c7161a53766c"),
                            Name = "FDS"
                        },
                        new
                        {
                            Id = new Guid("abe33b77-6c06-48c1-8b03-ffe45d0a2a8e"),
                            Name = "Carro"
                        },
                        new
                        {
                            Id = new Guid("f5f4860e-bbdf-404a-8a2d-0610eb3b2c50"),
                            Name = "Marca"
                        },
                        new
                        {
                            Id = new Guid("ec2d21ca-3f99-4d2b-930e-29592902cd74"),
                            Name = "Objeto"
                        },
                        new
                        {
                            Id = new Guid("7c85230d-4db7-482d-b960-3384f9d342e5"),
                            Name = "Cor"
                        },
                        new
                        {
                            Id = new Guid("a6ca80e4-c130-4ec6-b106-7f4d0b75ea16"),
                            Name = "Fruta"
                        });
                });

            modelBuilder.Entity("WeStop.Domain.GameRoomPlayer", b =>
                {
                    b.HasOne("WeStop.Domain.GameRoom", "GameRoom")
                        .WithMany("GameRoomPlayers")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WeStop.Domain.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
