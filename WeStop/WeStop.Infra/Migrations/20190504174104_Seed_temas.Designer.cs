// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeStop.Infra;

namespace WeStop.Infra.Migrations
{
    [DbContext(typeof(WeStopDbContext))]
    [Migration("20190504174104_Seed_temas")]
    partial class Seed_temas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WeStop.Domain.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiraton_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(15);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnName("number_of_players");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnName("number_of_rounds");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("gameroom","public");
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<Guid?>("GameRoomId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(35);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.ToTable("player","public");
                });

            modelBuilder.Entity("WeStop.Domain.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("theme","public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("395cc6f2-3018-4a7c-90f3-369087faacbb"),
                            Name = "Nome"
                        },
                        new
                        {
                            Id = new Guid("695cf63d-2760-4b1d-b8f7-39879bd4ee29"),
                            Name = "Sobrenome"
                        },
                        new
                        {
                            Id = new Guid("03911ab8-5e9c-4f19-9e0d-d94c5d87ab3e"),
                            Name = "CEP"
                        },
                        new
                        {
                            Id = new Guid("0402a910-fd0c-4de0-a871-17ccc93640ca"),
                            Name = "FDS"
                        },
                        new
                        {
                            Id = new Guid("210ec31e-db11-485d-b4a7-fb15d0d8721a"),
                            Name = "Carro"
                        },
                        new
                        {
                            Id = new Guid("5208928f-47ed-44ff-8ee7-e2c32574a53e"),
                            Name = "Marca"
                        },
                        new
                        {
                            Id = new Guid("7015fdbb-3179-450f-9c7f-bac658957812"),
                            Name = "Objeto"
                        },
                        new
                        {
                            Id = new Guid("9114719c-64bb-46a5-879f-9c3fb3d8e674"),
                            Name = "Cor"
                        },
                        new
                        {
                            Id = new Guid("05a69df1-a1eb-441b-85a8-00d5231fb034"),
                            Name = "Fruta"
                        });
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.HasOne("WeStop.Domain.GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
