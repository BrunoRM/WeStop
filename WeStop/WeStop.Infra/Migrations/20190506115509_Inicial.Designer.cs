// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeStop.Infra.Database;

namespace WeStop.Infra.Migrations
{
    [DbContext(typeof(WeStopSqlServerDbContext))]
    [Migration("20190506115509_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeStop.Domain.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiraton_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(15);

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnName("number_of_players");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnName("number_of_rounds");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("gameroom");
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<Guid?>("GameRoomId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(35);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("WeStop.Domain.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("theme");

                    b.HasData(
                        new
                        {
                            Id = new Guid("181655f7-8649-4eed-a30e-af1d50897522"),
                            Name = "Nome"
                        },
                        new
                        {
                            Id = new Guid("68183d37-9282-47ef-832f-3c6837bfc6e7"),
                            Name = "Sobrenome"
                        },
                        new
                        {
                            Id = new Guid("47d5b7c2-748c-4d6f-b3f4-d3d807f563f5"),
                            Name = "CEP"
                        },
                        new
                        {
                            Id = new Guid("1b113fe6-7365-43b6-845a-b62548a07c94"),
                            Name = "FDS"
                        },
                        new
                        {
                            Id = new Guid("70e39d6d-7317-426f-a227-7d3d50230cbb"),
                            Name = "Carro"
                        },
                        new
                        {
                            Id = new Guid("cacd0f82-c2ab-44a3-ac1b-0b23ec736177"),
                            Name = "Marca"
                        },
                        new
                        {
                            Id = new Guid("87f3ce4a-de91-4425-a5ba-3a93bfa57c61"),
                            Name = "Objeto"
                        },
                        new
                        {
                            Id = new Guid("c4f76812-eff0-452b-9e4a-7fbb6c05fad0"),
                            Name = "Cor"
                        },
                        new
                        {
                            Id = new Guid("fe094679-bd10-4fdb-ac25-000aec2a4ae4"),
                            Name = "Fruta"
                        });
                });

            modelBuilder.Entity("WeStop.Domain.Player", b =>
                {
                    b.HasOne("WeStop.Domain.GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
